const { db } = require("./firebase");

const initFirestore = async () => {
  try {
    // Capteurs
    const sensorsRef = db.collection("sensors");
    const snapshotSensors = await sensorsRef.limit(1).get();
    if (snapshotSensors.empty) {
      // Ins√©rer des capteurs de test
      const testSensors = [
        {
          name: "Temp√©rature",
          type: "thermique",
          value: 22, // valeur de test
          unit: "¬∞C",
          createdAt: new Date(),
        },
        {
          name: "Humidit√© du sol",
          type: "humidite",
          value: 60, // valeur de test
          unit: "%",
          createdAt: new Date(),
        },
        {
          name: "CO‚ÇÇ",
          type: "co2",
          value: 400, // valeur de test
          unit: "ppm",
          createdAt: new Date(),
        },
        {
          name: "Luminosit√©",
          type: "luminosite",
          value: 200, // valeur de test
          unit: "lux",
          createdAt: new Date(),
        },
        {
          name: "Niveau d'eau",
          type: "niveau_eau",
          value: 50, // valeur de test
          unit: "%",
          createdAt: new Date(),
        },
      ];

      // Ajouter les capteurs de test √† la collection
      for (let sensor of testSensors) {
        await sensorsRef.add(sensor);
      }
      console.log("üì° Collection 'sensors' initialis√©e avec des donn√©es de test");
    }

    // Actionneurs
    const actuatorsRef = db.collection("actuators");
    const snapshotActuators = await actuatorsRef.limit(1).get();
    if (snapshotActuators.empty) {
      await actuatorsRef.add({
        name: "Pompe √† eau",
        status: "off",
        zone: "Zone A",
        createdAt: new Date(),
      });
      console.log("üîå Collection 'actuators' initialis√©e avec un actionneur");
    }

    // Alertes
    const alertsRef = db.collection("alerts");
    const snapshotAlerts = await alertsRef.limit(1).get();
    if (snapshotAlerts.empty) {
      await alertsRef.add({
        message: "Humidit√© trop basse",
        level: "critique",
        timestamp: new Date(),
      });
      console.log("üö® Collection 'alerts' initialis√©e avec une alerte");
    }

    // Utilisateurs
    const usersRef = db.collection("users");
    const snapshotUsers = await usersRef.limit(1).get();
    if (snapshotUsers.empty) {
      await usersRef.add({
        name: "Admin",
        email: "admin@smart-agri.com",
        role: "admin",
        createdAt: new Date(),
      });
      console.log("üë§ Collection 'users' initialis√©e avec un utilisateur");
    }

  } catch (err) {
    console.error("‚ùå Erreur lors de l'initialisation de Firestore :", err);
  }
};

module.exports = initFirestore;
